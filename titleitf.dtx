% \iffalse meta-comment
% !TeX program  = XeLaTeX
% !TeX encoding = UTF-8
%<*internal>
\iffalse
%</internal>
%<*readme>
titleitf
========

The `titleitf` package provides a key–value interface for `titlesec` bundle.

Basic Usage
-----------

Contributing
------------

[Issues](https://github.com/qinglee/titleitf/issues) and
[pull requests](https://github.com/qinglee/titleitf/pulls)
are always welcome.

Copyright and Licence
---------------------

    Copyright (C) 2022 by Qing Lee <sobenlee@gmail.com>
    -----------------------------------------------------------------

    This work may be distributed and/or modified under the
    conditions of the LaTeX Project Public License, either
    version 1.3c of this license or (at your option) any later
    version. This version of this license is in
       http://www.latex-project.org/lppl/lppl-1-3c.txt
    and the latest version of this license is in
       http://www.latex-project.org/lppl.txt
    and version 1.3 or later is part of all distributions of
    LaTeX version 2005/12/01 or later.

    This work has the LPPL maintenance status "maintained".

    The Current Maintainer of this work is Qing Lee.

    This package consists of the file  titleitf.dtx,
                 and the derived files titleitf.pdf,
                                       titleitf.sty,
                                       titleitf.ins and
                                       README.md (this file).
%</readme>
%<*internal>
\fi
\begingroup
  \def\temp{LaTeX2e}
\expandafter\endgroup\ifx\temp\fmtname\else
\csname fi\endcsname
%</internal>
%<*install>

\input ctxdocstrip %

\preamble

    Copyright (C) 2022 by Qing Lee <sobenlee@gmail.com>
-----------------------------------------------------------------

    This work may be distributed and/or modified under the
    conditions of the LaTeX Project Public License, either
    version 1.3c of this license or (at your option) any later
    version. This version of this license is in
       http://www.latex-project.org/lppl/lppl-1-3c.txt
    and the latest version of this license is in
       http://www.latex-project.org/lppl.txt
    and version 1.3 or later is part of all distributions of
    LaTeX version 2005/12/01 or later.

    This work has the LPPL maintenance status "maintained".

    The Current Maintainer of this work is Qing Lee.

-----------------------------------------------------------------

\endpreamble

\postamble

    This work consists of the file  titleitf.dtx,
              and the derived files titleitf.pdf,
                                    titleitf.sty,
                                    titleitf.ins and
                                    README.md.
\endpostamble

\generate
  {
%</install>
%<*internal>
    \usedir{source/latex/titleitf}
    \file{titleitf.ins} {\from{\jobname.dtx}{install}}
%</internal>
%<*install>
    \usedir{tex/latex/titleitf}
    \file{titleitf.sty} {\from{\jobname.dtx}{package}}
    \nopreamble\nopostamble
    \usedir{doc/latex/titleitf}
    \file{README.md}    {\from{\jobname.dtx}{readme}}
  }

\endbatchfile
%</install>
%<*internal>
\fi
%</internal>
%<package>\NeedsTeXFormat{LaTeX2e}
%<package>\RequirePackage{expl3}
%<+package>\GetIdInfo$Id$
%<package>  {Key–value interface for titletoc}
%<package>\ProvidesExplPackage{\ExplFileName}
%<package>  {\ExplFileDate}{0}{\ExplFileDescription}
%<*driver>
\documentclass{ctxdoc}
\ExplSyntaxOn
\makeatletter
\DeclareDocumentCommand \gitsha { m }
  {
    \href { https \c_colon_str //github.com/qinglee/titleitf/commit/#1 }
          { rev. ~ \texttt{#1} }
  }
\cs_set_protected:Npn \meta@font@select
  { \normalfont \itshape }
\NewDocumentEnvironment { desc } { }
  {
    \trivlist
    \small
    \tl_put_right:Nn \@vobeyspaces
      {
        \char_set_catcode_active:N \<
        \char_set_catcode_active:N \>
        \char_set_active_eq:NN \< \@@_meta:w
      }
    \item \relax \tabular {|l|} \hline
  }
  {
    \\ \hline
    \endtabular
    \endtrivlist
  }
\group_begin:
  \char_set_catcode_active:N \>
  \cs_new_protected:Npn \@@_meta:w #1 > { \meta {#1} }
\group_end:
\makeatother
\ExplSyntaxOff
\begin{document}
  \DocInput{\jobname.dtx}
  \IndexLayout
  \PrintChanges
  \PrintIndex
\end{document}
%</driver>
% \fi
%
% \CheckSum{332}
% \GetFileId{titleitf.sty}
%
% \changes{v0}{2022/05/22}{初始版本。}
%
% \title{\bfseries\pkg{titleitf} 宏包}
% \author{李清}
% \date{\ExplFileDate\thanks{\gitsha{\ExplFileVersion}.}}
% \maketitle
%
% \begin{abstract}
%
% \pkg{titleitf} 宏包提供了 \pkg{titlesec} 宏包的一个键值设置界面。
%
% \end{abstract}
%
% \begin{documentation}
%
% \section{基本用法}
%
% \begin{function}{\secset}
%   \begin{syntax}
%     \tn{secset} \Arg{section} \Arg{ ... }
%   \end{syntax}
% \end{function}
%
% \begin{function}{\tocset}
%   \begin{syntax}
%     \tn{tocset} \Arg{section} \Arg{ ... }
%   \end{syntax}
% \end{function}
%
% \begin{function}{block}
% \end{function}
%
% \begin{function}{leftskip}
% \end{function}
%
% \begin{function}{above-code}
% \end{function}
%
% \begin{function}{below-code}
% \end{function}
%
% \begin{function}{format}
% \end{function}
%
% \begin{function}{numbered-format}
% \end{function}
%
% \begin{function}{numberless-format}
% \end{function}
%
% \begin{function}{page-format}
% \end{function}
%
% \begin{function}{separator}
% \end{function}
%
% \begin{function}{begin-code}
% \end{function}
%
% \begin{function}{end-code}
% \end{function}
%
% \begin{function}{\pageset}
%   \begin{syntax}
%     \tn{pageset} \Arg{section} \Arg{ ... }
%   \end{syntax}
% \end{function}
%
% \end{documentation}
%
%
% \StopEventually{}
%
%
%\begin{implementation}
%
% \section{代码实现}
%
%    \begin{macrocode}
%<*package>
%    \end{macrocode}
%
%    \begin{macrocode}
%<@@=titleitf>
%    \end{macrocode}
%
%    \begin{macrocode}
\prop_gput:Nnn \g_msg_module_name_prop { ttlitf } { titleitf }
%    \end{macrocode}
%
% 主要依赖 \pkg{xtemplate} 实现。
%    \begin{macrocode}
\RequirePackage { xtemplate }
%    \end{macrocode}
%
%    \begin{macrocode}
\hook_gput_code:nnn { begindocument } { . }
  {
    \legacy_if:nT { @filesw }
      {
        \iow_now:Nx \@mainaux
          {
            \iow_char:N \\ providecommand
            \iow_char:N \\ ttlp@append [2] { } \iow_newline:
            \iow_char:N \\ providecommand
            \iow_char:N \\ ttl@finishall   { } \iow_newline:
            \iow_char:N \\ providecommand
            \iow_char:N \\ contentsfinish  { }
          }
      }
  }
%    \end{macrocode}
%
% \begin{macro}{\secset, \tocset, \pageset}
% 用户函数。
%    \begin{macrocode}
\NewDocumentCommand \secset { > { \TrimSpaces } m }
  { \ttlitf_set:nen { sec } {#1} }
\NewDocumentCommand \tocset { > { \TrimSpaces } m }
  { \ttlitf_set:nen { toc } {#1} }
\NewDocumentCommand \pageset { > { \TrimSpaces } m }
  { \ttlitf_set:nen { page } {#1} }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\ttlitf_set:nnn}
% 主要函数。
%    \begin{macrocode}
\cs_new_protected:Npn \ttlitf_set:nnn #1#2#3
  {
    \IfInstanceExistTF { ttlitf } { #1 / #2 }
      { \EditInstance { ttlitf } { #1 / #2 } }
      { \DeclareInstance { ttlitf } { #1 / #2 } {#1} }
      {#3}
    \UseInstance { ttlitf } { #1 / #2 } {#2}
  }
\cs_generate_variant:Nn \ttlitf_set:nnn { ne }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@@_cs_undefine:N, \@@_cs_undefine:c}
% \cs{cs_undefine:N} 的效果是全局的，但是我们只需要局部的效果。
%    \begin{macrocode}
\cs_new_protected:Npn \@@_cs_undefine:N #1
  { \cs_set_eq:NN #1 \tex_undefined:D }
\cs_generate_variant:Nn \@@_cs_undefine:N { c }
%    \end{macrocode}
% \end{macro}
%
%    \begin{macrocode}
\DeclareObjectType { ttlitf } { 1 }
%    \end{macrocode}
%
% \begin{desc}
% |\titleformat{<command>}[<shape>]{<format>}{<label>}{<sep>}{<before-code>}[<after-code>]|\\
% |\titlespacing*{<command>}{<left>}{<before-sep>}{<after-sep>}[<right-sep>]|
% \end{desc}
% 章节标题设置模板。
%    \begin{macrocode}
\DeclareTemplateInterface { ttlitf } { sec } { 1 }
  {
    class         : tokenlist = ,
    format        : tokenlist = ,
    before-code   : tokenlist = ,
    after-code    : tokenlist = ,
    super-level   : tokenlist = ,
    page-style    : tokenlist = ,
    label-sep     : tokenlist = \c_zero_skip ,
    before-sep    : tokenlist = \c_zero_skip ,
    after-sep     : tokenlist = \c_zero_skip ,
    left-sep      : tokenlist = \c_zero_skip ,
    right-sep     : tokenlist = \c_zero_skip ,
    shape         : tokenlist = hang ,
    label         : tokenlist = ,
    break         : tokenlist = \q_no_value ,
    mark          : tokenlist = \q_no_value ,
    indent-first  : boolean   = true ,
    numberless    : boolean   = false ,
    page          : choice { odd, even, all } = all ,
  }
\DeclareTemplateCode { ttlitf } { sec } { 1 }
  {
    class         = \l_@@_class_tl ,
    format        = \l_@@_format_tl ,
    before-code   = \l_@@_before_code_tl ,
    after-code    = \l_@@_after_code_tl ,
    super-level   = \l_@@_super_level_tl ,
    page-style    = \l_@@_page_style_tl ,
    label-sep     = \l_@@_label_sep_tl ,
    before-sep    = \l_@@_before_sep_tl ,
    after-sep     = \l_@@_after_sep_tl ,
    left-sep      = \l_@@_left_sep_tl ,
    right-sep     = \l_@@_right_sep_tl ,
    shape         = \l_@@_shape_tl ,
    label         = \l_@@_label_tl ,
    break         = \l_@@_break_tl ,
    mark          = \l_@@_mark_tl ,
    indent-first  = \l_@@_indent_first_bool ,
    numberless    = \l_@@_numberless_bool ,
    page          =
      {
        odd  = \tl_set:Nn \l_@@_page_tl { / odd } ,
        even = \tl_set:Nn \l_@@_page_tl { / even } ,
        all  = \tl_clear:N \l_@@_page_tl ,
      }
  }
  {
    \AssignTemplateKeys
    \tl_if_empty:NF \l_@@_class_tl
      {
        \use:e
          {
            \exp_not:N \titleclass
              { \exp_not:c {#1} }
              { \exp_not:o {\l_@@_class_tl } }
            \tl_if_empty:NF \l_@@_super_level_tl
              { [ \exp_not:c { \l_@@_super_level_tl } ] }
          }
      }
    \@@_prepare_shape:e { \l_@@_shape_tl }
    \bool_if:NF \l_@@_numberless_bool
      {
        \@@_cs_undefine:c { ttlf@ #1 / * }
        \@@_cs_undefine:c { ttls@ #1 / * }
      }
    \tl_if_empty:NTF \l_@@_page_tl
      {
        \cs_set_eq:NN \ttlp@append \use_none:nn
        \@@_cs_undefine:c { ttlp@ #1 }
        \@@_cs_undefine:c { ttlf@ #1 / odd  }
        \@@_cs_undefine:c { ttls@ #1 / odd  }
        \@@_cs_undefine:c { ttlf@ #1 / even }
        \@@_cs_undefine:c { ttls@ #1 / even }
        \cs_set_eq:cc { ttlf@ #1 / odd  / * } { ttlf@ #1 / * }
        \cs_set_eq:cc { ttls@ #1 / odd  / * } { ttls@ #1 / * }
        \cs_set_eq:cc { ttlf@ #1 / even / * } { ttlf@ #1 / * }
        \cs_set_eq:cc { ttls@ #1 / even / * } { ttls@ #1 / * }
      }
      {
        \cs_if_exist:cF { ttlp@ #1 }
          { \cs_set_eq:cN { ttlp@ #1 } \c_empty_tl }
        \cs_set_eq:NN \ttlp@append \@@_ttlp_append:nn
      }
    \tl_set:Nx \l_@@_section_tl
      {
        #1
        \l_@@_page_tl
        \bool_if:NT \l_@@_numberless_bool { / * }
      }
    \exp_args:Nne \use:n
      {
        \legacy_if:nTF { ttl@explicit }
          { \cs_set_protected:cpn { ttlf@ \l_@@_section_tl } ##1 }
          { \cs_set_protected:cpn { ttlf@ \l_@@_section_tl } }
      }
      {
        \exp_not:c { ttlh@ \l_@@_shape_tl }
          { \exp_not:o { \l_@@_format_tl } }
          { \exp_not:o { \l_@@_label_tl } }
          { \exp_not:N \skip_eval:n { \exp_not:o { \l_@@_label_sep_tl } } }
          { \exp_not:o { \l_@@_before_code_tl } }
          { \exp_not:o { \l_@@_after_code_tl } }
      }
    \cs_if_exist_use:c { ttl@compat \l_@@_section_tl }
    \tl_set:cx { ttls@ \l_@@_section_tl }
      {
        { \exp_not:N \skip_eval:n { \exp_not:o { \l_@@_left_sep_tl } } }
        { \exp_not:N \skip_eval:n { \exp_not:o { \l_@@_right_sep_tl } } }
        { \exp_not:N \skip_eval:n { \exp_not:o { \l_@@_before_sep_tl } } }
        { \exp_not:N \skip_eval:n { \exp_not:o { \l_@@_after_sep_tl } } }
        { \bool_if:NTF \l_@@_indent_first_bool { \@ne } { \z@ } }
      }
    \tl_if_empty:NF \l_@@_page_style_tl
      { \cs_set_eq:cN { ttl@ps@ #1 } { \l_@@_page_style_tl } }
    \quark_if_no_value:NF \l_@@_break_tl
      {
        \cs_set_protected:cpx { #1 break }
          { \exp_not:o { \l_@@_break_tl } }
      }
    \quark_if_no_value:NF \l_@@_mark_tl
      {
        \exp_args:Nno \use:n
          { \cs_set_protected:cpn { #1 mark } ##1 }
          { \l_@@_mark_tl }
      }
  }
\tl_new:N \l_@@_page_tl
\tl_new:N \l_@@_section_tl
\msg_new:nnnn { ttlitf } { unknown-shape }
  { Title~shape~"#1"~is~unknown. }
  {
    Shapes~are~defined~in~files~with~extension~tss.\\
    Either~you~have~misspelled~the~shape~or~there~is~no~a~#1.tss~file.
  }
%    \end{macrocode}
%
% \begin{macro}{\@@_prepare_shape:n}
% 确保 \meta{shape} 存在。
%    \begin{macrocode}
\cs_new_protected:Npn \@@_prepare_shape:n #1
  {
    \cs_if_exist:cF { ttlh@ #1 }
      {
        \cctab_begin:N \c_@@_package_cctab
          \file_if_exist_input:nF { #1 .tss }
            {
              \cs_if_exist:cTF { ttlhx@ #1 }
                { \cs_new_eq:cc { ttlh@ #1 } { ttlhx@ #1 } }
                { \msg_error:nnn { ttlitf } { unknown-shape } {#1} }
            }
        \cctab_end:
      }
  }
\cctab_const:Nn \c_@@_package_cctab
  {
    \cctab_select:N \c_document_cctab
    \char_set_catcode_letter:n { 64 }
  }
\cs_generate_variant:Nn { \@@_prepare_shape:n } { e }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@@_extract_sec:n}
% 获取标题默认设置。
%    \begin{macrocode}
\cs_new_protected:Npn \@@_extract_sec:n #1
  {
    \clist_clear:N \l_@@_extract_list
    \cs_if_free:cF { ttlf@ #1 }
      { \@@_extract_sec_format:c { ttlf@ #1 } }
    \cs_if_free:cF { ttls@ #1 }
      { \@@_extract_sec_spacing:c { ttls@ #1 } }
    \clist_if_empty:NF \l_@@_extract_list
      {
        \exp_args:Nno \use:n
          { \DeclareInstance { ttlitf } { sec / #1 } { sec } }
          { \l_@@_extract_list }
      }
  }
\cs_new_protected:Npn \@@_extract_sec_format:N #1
  {
    \legacy_if:nTF { ttl@explicit }
      { \exp_after:wN \@@_extract_sec_format:Nnnnnn #1 { } }
      { \exp_after:wN \@@_extract_sec_format:Nnnnnn #1 }
  }
\cs_new_protected:Npn \@@_extract_sec_spacing:N
  { \exp_after:wN \@@_extract_sec_spacing:nnnnn }
\cs_generate_variant:Nn \@@_extract_sec_format:N  { c }
\cs_generate_variant:Nn \@@_extract_sec_spacing:N { c }
\cs_new_protected:Npn \@@_extract_sec_format:Nnnnnn #1#2#3#4#5#6
  {
    \clist_put_right:Nx \l_@@_extract_list
      { shape = \@@_extract_strip:N #1 }
    \clist_put_right:Nn \l_@@_extract_list
      {
        format      = {#2} ,
        label       = {#3} ,
        label-sep   = {#4} ,
        before-code = {#5} ,
        after-code  = {#6}
      }
  }
\cs_new_protected:Npn \@@_extract_sec_spacing:nnnnn #1#2#3#4#5
  {
    \clist_put_right:Nn \l_@@_extract_list
      {
        left-sep   = {#1} ,
        right-sep  = {#2} ,
        before-sep = {#3} ,
        after-sep  = {#4}
      }
    \clist_put_right:Nx \l_@@_extract_list
      { indent-first = \int_if_odd:nTF {#5} { true } { false } }
  }
\cs_new:Npn \@@_extract_strip:N #1
  { \exp_after:wN \@@_extract_strip:w \token_to_str:N #1 \q_stop }
\exp_args:Nne \use:nn
  { \cs_new:Npn \@@_extract_strip:w #1 }
  { \token_to_str:N @ } #2 \q_stop
  {#2}
\clist_new:N \l_@@_extract_list
%    \end{macrocode}
% \end{macro}
%
% \begin{variable}{\c_@@_sec_seq}
% 标准章节标题命令列表。
%    \begin{macrocode}
\seq_const_from_clist:Nn \c_@@_sec_seq
  { part, chapter, section, subsection, subsubsection, paragraph, subparagraph }
\hook_gput_code:nnn { package/titlesec/after } { . }
  {
    \cs_if_exist_use:NT \ttl@keys
      { \cs_new_eq:NN \@@_ttlp_append:nn \ttlp@append }
    \seq_map_function:NN \c_@@_sec_seq \@@_extract_sec:n
  }
%    \end{macrocode}
% \end{variable}
%
% \begin{desc}
% |\titlecontents{<section>}[<left>]{<above-code>}|\\
% |              {<numbered-entry-format>}{<numberless-entry-format>}|\\
% |              {<filler-page-format>}[<below-code>]|\\
% |\titlecontents*{<section>}[<left>]{<above-code>}|\\
% |               {<numbered-entry-format>}{<numberless-entry-format>}|\\
% |               {<filler-page-format>}|\\
% |               [<separator>]|\\
% |               [<separator>][<end>]|\\
% |               [<begin>][<separator>][<end>]|
% \end{desc}
%    \begin{macrocode}
\DeclareTemplateInterface { ttlitf } { toc } { 1 }
  {
    block             : boolean   = false ,
    leftskip          : tokenlist = \c_zero_skip ,
    above-code        : tokenlist = ,
    below-code        : tokenlist = ,
    format            : tokenlist = ,
    numbered-format   : tokenlist = \thecontentslabel ,
    numberless-format : tokenlist = ,
    page-format       : tokenlist = \thecontentspage ,
    separator         : tokenlist = ,
    begin-code        : tokenlist = ,
    end-code          : tokenlist = ,
  }
\DeclareTemplateCode { ttlitf } { toc } { 1 }
  {
    block             = \l_@@_block_bool ,
    leftskip          = \l_@@_leftskip_tl ,
    above-code        = \l_@@_above_code_tl ,
    below-code        = \l_@@_below_code_tl ,
    format            = \l_@@_format_tl ,
    numbered-format   = \l_@@_numbered_format_tl ,
    numberless-format = \l_@@_numberless_format_tl ,
    page-format       = \l_@@_page_format_tl ,
    separator         = \l_@@_separator_tl ,
    begin-code        = \l_@@_begin_code_tl ,
    end-code          = \l_@@_end_code_tl ,
  }
  {
    \AssignTemplateKeys
    \cs_set_protected_nopar:cpx { l@ #1 }
      {
        \exp_not:N \ttl@tocentry
          { \bool_if:NTF \l_@@_block_bool { \z@ } { \@ne } }
          {#1}
          { \exp_not:N \skip_eval:n { \exp_not:o { \l_@@_leftskip_tl } } }
          { \exp_not:o { \l_@@_above_code_tl } }
          {
            {
              \exp_not:o { \l_@@_format_tl }
              \exp_not:o { \l_@@_numbered_format_tl }
            }
            {
              \exp_not:o { \l_@@_format_tl }
              \exp_not:o { \l_@@_numberless_format_tl }
            }
          }
          { \exp_not:o { \l_@@_page_format_tl } }
      }
    \tl_set_eq:cN { ttlb@ #1 } \l_@@_begin_code_tl
    \tl_set_eq:cN { ttlm@ #1 } \l_@@_separator_tl
    \bool_if:NTF \l_@@_block_bool
      { \tl_set_eq:cN { ttle@ #1 } \l_@@_end_code_tl }
      { \tl_set_eq:cN { ttle@ #1 } \l_@@_below_code_tl }
  }
%    \end{macrocode}
%
%    \begin{macrocode}
%</package>
%    \end{macrocode}
%
% \end{implementation}
%
% \Finale
%
\endinput
